-- DEMO for SUMOHOOK.lua
-- Показывает все основные возможности библиотеки

-- Подключаем библиотеку (можно указать свою ссылку)
local Theme = {
    Background = Color3.fromRGB(20, 20, 25),
    Panel = Color3.fromRGB(30, 30, 38),
    Panel2 = Color3.fromRGB(40, 40, 50),
    Accent = Color3.fromRGB(120, 180, 255),
    Text = Color3.fromRGB(240, 240, 240),
    TextDim = Color3.fromRGB(180, 180, 190),
    Control = Color3.fromRGB(45, 45, 55),
    Stroke = Color3.fromRGB(0, 0, 0),
    Warn = Color3.fromRGB(255, 85, 85),
}

local SUMO = loadstring(game:HttpGet("https://raw.githubusercontent.com/MortyMo22/ui-libs/refs/heads/main/SUMOHOOK.lua"))()(Theme)

-- Создаём окно
local win = SUMO:Window("SUMOHOOK Showcase")
local serv = win:Server("Demo Tab", "")

-- Левые и правые секции
local left = serv:Channel("Main Controls", "Left")
local right = serv:Channel("Customization", "Right")

-- ======== LEFT SIDE ========
left:Button("Send Notification", {
    Callback = function()
        SUMO:Notification("Notification", "Пример уведомления!", "OK")
    end
})

left:Seperator()

left:Toggle("God Mode", {
    Flag = "GodMode",
    State = false,
    Callback = function(state)
        SUMO:Notification("Toggle", "God mode: " .. tostring(state), "OK")
    end
})

left:Bind("God Mode Key", {
    Flag = "GodModeKey",
    Default = Enum.KeyCode.G,
    Callback = function(key)
        local f = win:Flags()
        f.GodMode = not f.GodMode
        SUMO:Notification("Bind", "Нажата клавиша: " .. key.Name .. "\nGodMode = " .. tostring(f.GodMode), "OK")
    end
})

left:Slider("WalkSpeed", {
    Flag = "WalkSpeed",
    Min = 16,
    Max = 200,
    Value = 50,
    Suffix = " u/s",
    Callback = function(val)
        SUMO:Notification("Slider", "WalkSpeed: " .. tostring(math.floor(val)) .. " u/s", "OK")
    end
})

left:Seperator()

left:List("Target", {
    Flag = "TargetName",
    Values = {"Mob A", "Mob B", "Mob C", "Player X", "Player Y"},
    Value = "Mob A",
    Multi = false,
    Callback = function(selected)
        SUMO:Notification("List", "Selected: " .. tostring(selected), "OK")
    end
})

left:Color("ESP Color", {
    Flag = "ESPColor",
    Color = Color3.fromRGB(255, 60, 60),
    Callback = function(color)
        local r = math.floor(color.R * 255)
        local g = math.floor(color.G * 255)
        local b = math.floor(color.B * 255)
        SUMO:Notification("Color", ("RGB: %d, %d, %d"):format(r, g, b), "OK")
    end
})

left:TextBox("Username", {
    Flag = "UserText",
    Value = "",
    Callback = function(text)
        SUMO:Notification("Textbox", "Hello, " .. tostring(text), "OK")
    end
})

left:Seperator()

left:Button("Print Flags", {
    Callback = function()
        local f = win:Flags()
        for k, v in pairs(f) do
            print(("[%s] = %s"):format(k, tostring(v)))
        end
        SUMO:Notification("Flags", "Все флаги выведены в консоль", "OK")
    end
})

-- ======== RIGHT SIDE ========
right:Label("Тема интерфейса", {bold = true, topMargin = 10})

right:Color("Accent Color", {
    Flag = "Accent",
    Color = Theme.Accent,
    Callback = function(color)
        Theme.Accent = color
        SUMO:SetTheme(Theme)
        SUMO:Notification("Theme", "Accent color updated!", "OK")
    end
})

right:Color("Background", {
    Flag = "Background",
    Color = Theme.Background,
    Callback = function(color)
        Theme.Background = color
        SUMO:SetTheme(Theme)
    end
})

right:Button("Reset Theme", {
    Callback = function()
        SUMO:SetTheme({
            Background = Color3.fromRGB(20, 20, 25),
            Accent = Color3.fromRGB(120, 180, 255),
            Text = Color3.fromRGB(240, 240, 240)
        })
        SUMO:Notification("Theme", "Тема сброшена!", "OK")
    end
})

right:Seperator()

right:Button("Exit Demo", {
    Callback = function()
        SUMO:Notification("Goodbye", "Демо завершено!", "Bye!")
    end
})

-- ======== Инициализация ========
win:Init()

-- Авто-печать флагов
task.delay(3, function()
    local f = win:Flags()
    print("===== SUMOHOOK FLAGS =====")
    for k, v in pairs(f) do
        print(k, "=", v)
    end
end)
